data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
collegedatanum <- c("Rank", "Total.Annual.Cost", "Average.Grant.Aid", "Acceptance.Rate")
collegedata1 <- collegedata[collegedatanum]
na.omit(collegedata1)
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
collegedatanum <- c("Rank", "Total.Annual.Cost", "Average.Grant.Aid", "Student.Population")
collegedata1 <- collegedata[collegedatanum]
na.omit(collegedata1)
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
collegedatanum <- c("Rank", "Total.Annual.Cost", "Acceptance.Rate", "Student.Population")
collegedata1 <- collegedata[collegedatanum]
na.omit(collegedata1)
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
collegedatanum <- c("Rank", "Total.Annual.Cost", "SAT.Upper", "Student.Population")
collegedata1 <- collegedata[collegedatanum]
na.omit(collegedata1)
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
collegedatanum <- c("Rank", "Total.Annual.Cost", "Undergraduate.Population", "Student.Population")
collegedata1 <- collegedata[collegedatanum]
na.omit(collegedata1)
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
collegedatanum <- c("Rank", "Total.Annual.Cost", "SAT.Upper", "Student.Population")
collegedata1 <- collegedata[collegedatanum]
na.omit(collegedata1)
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
collegedatanum <- c("Rank", "Total.Annual.Cost", "SAT.Lower", "Student.Population")
collegedata1 <- collegedata[collegedatanum]
na.omit(collegedata1)
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
collegedatanum <- c("Rank", "Total.Annual.Cost", "Acceptance.Rate", "Student.Population")
collegedata1 <- collegedata[collegedatanum]
na.omit(collegedata1)
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
knitr::opts_chunk$set(echo = FALSE)
collegedata = read.csv("ForbesAmericasTopColleges2019 4.csv", header = TRUE, sep = ",")
library(ggplot2)
library(plotly)
library(ggcorrplot)
collegedata$Size = cut(collegedata$Student.Population,
breaks = c(0, 2500, 8000, 15000, 25000, max(collegedata$Student.Population)),
labels = c("Very Small", "Small", "Medium", "Big", "Very Big"), ordered = TRUE)
collegedata$Rank.Fac = cut(collegedata$Rank,
breaks = c(0, 100, 200, 300, 400, max(collegedata$Rank)),
labels = c("Top 100", "101-200", "201-300", "301-400", "401+"), ordered = TRUE)
collegedatanum <- c("Rank", "Total.Annual.Cost", "Undergraduate.Population", "Student.Population")
collegedata1 <- collegedata[collegedatanum]
na.omit(collegedata1)
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
collegedatanum <- c("Rank", "Total.Annual.Cost", "Undergraduate.Population", "Student.Population")
collegedata1 <- collegedata[collegedatanum]
na.omit(collegedata1)
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
knitr::opts_chunk$set(echo = FALSE)
collegedata = read.csv("ForbesAmericasTopColleges2019 4.csv", header = TRUE, sep = ",")
knitr::opts_chunk$set(echo = FALSE)
library(Lock5Data)
data(Cars2020)
str(Cars2020)
library(MASS)
data(survey)
str(survey)
knitr::opts_chunk$set(echo = FALSE)
library(plotly)
g1 = ggplot(collegedata, aes(x = Rank, y = Total.Annual.Cost, color = Public.Private, text = paste("Name", Name)))) +
library(plotly)
g1 = ggplot(collegedata, aes(x = Rank, y = Total.Annual.Cost, color = Public.Private, text = paste("Name", Name))) +
geom_point(alpha = 2/3, size = 2) +
scale_color_brewer(palette = "Paired") +
xlab("School Rank") +
ylab("Total Annual Cost") +
labs(color = "Public or Private") +
ggtitle("Scatterplot of School Rank, Total Annual Cost, and Public/Private")
ggplotly(g1)
collegedata = read.csv("ForbesAmericasTopColleges2019 4.csv", header = TRUE, sep = ",")
library(ggplot2)
library(plotly)
library(ggcorrplot)
collegedata$Size = cut(collegedata$Student.Population,
breaks = c(0, 2500, 8000, 15000, 25000, max(collegedata$Student.Population)),
labels = c("Very Small", "Small", "Medium", "Big", "Very Big"), ordered = TRUE)
collegedata$Rank.Fac = cut(collegedata$Rank,
breaks = c(0, 100, 200, 300, 400, max(collegedata$Rank)),
labels = c("Top 100", "101-200", "201-300", "301-400", "401+"), ordered = TRUE)
collegedatanum <- c("Rank", "Total.Annual.Cost", "Undergraduate.Population", "Acceptance.Rate")
collegedata1 <- collegedata[collegedatanum]
na.omit(collegedata1)
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr) +
ggtitle("Correlation Plot")
summary(Acceptance.Rate)
summary("Acceptance.Rate")
summary("Acceptance.Rate")
summary(Acceptance.Rate)
collegedatanum <- collegedata[, c("Rank", "Total.Annual.Cost", "Undergraduate.Population", "Acceptance.Rate")]
collegedata1 <- collegedata[collegedatanum]
collegedatanum <- collegedata[, c("Rank", "Total.Annual.Cost", "Undergraduate.Population", "Acceptance.Rate")]
na.omit(collegedata1)
library(ggcorrplot)
data(collegedata1)
str(collegedata1)
cor(collegedata1)
corr <- round(cor(collegedata1), 1)
head(corr[, 1:4])
ggcorrplot(corr) +
ggtitle("Correlation Plot")
library(ggcorrplot)
corr <- round(cor(collegedatanum), 1)
ggcorrplot(corr) +
ggtitle("Correlation Plot")
collegedatanum <- collegedata[, c("Rank", "Total.Annual.Cost", "Undergraduate.Population", "Acceptance.Rate")]
na.omit(collegedata)
library(ggcorrplot)
corr <- round(cor(collegedatanum), 1)
ggcorrplot(corr) +
ggtitle("Correlation Plot")
collegedatanum <- collegedata[, c("Rank", "Total.Annual.Cost", "Undergraduate.Population", "Acceptance.Rate")]
na.omit(collegedatanum)
library(ggcorrplot)
corr <- round(cor(collegedatanum), 1)
ggcorrplot(corr) +
ggtitle("Correlation Plot")
cor(collegedatanum$Acceptance.Rate, collegedatanum$Rank)
collegedatanum <- collegedata[, c("Rank", "Total.Annual.Cost", "Undergraduate.Population", "Acceptance.Rate")]
library(ggcorrplot)
corr <- round(cor(collegedatanum), 1)
ggcorrplot(corr) +
ggtitle("Correlation Plot")
library(ggcorrplot)
corr <- round(cor(collegedatanum, use = "complete.obs"), 1)
ggcorrplot(corr) +
ggtitle("Correlation Plot")
library(ggcorrplot)
corr <- round(cor(collegedatanum, use = "complete.obs"), 1)
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
library(ggcorrplot)
corr <- round(cor(collegedatanum, use = "complete.obs"), 1)
ggcorrplot(corr) +
ggtitle("Correlation Plot")
collegedatanum <- collegedata[, c("Rank", "Total.Annual.Cost", "Undergraduate.Population", "Acceptance.Rate", "Alumni.Salary")]
library(ggcorrplot)
corr <- round(cor(collegedatanum, use = "complete.obs"), 1)
ggcorrplot(corr) +
ggtitle("Correlation Plot")
ggplot(collegedata, aes(Alumni.Salary, Total.Annual.Cost)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
geom_density_2d_filled() +
xlab("Alumni Salary") +
ylab("Total Annual Cost") +
ggtitle("Cost vs Alumni Salary Contour Plot")
ggplot(collegedata, aes(Alumni.Salary, Total.Annual.Cost)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
scale_fill_brewer("Set3") +
xlab("Alumni Salary") +
ylab("Total Annual Cost") +
ggtitle("Cost vs Alumni Salary Contour Plot")
ggplot(collegedata, aes(Alumni.Salary, Total.Annual.Cost)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
scale_fill_brewer("Set3") +
xlab("Alumni Salary") +
ylab("Total Annual Cost") +
ggtitle("Cost vs Alumni Salary Contour Plot")
ggplot(collegedata, aes(Alumni.Salary, Total.Annual.Cost)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
scale_fill_brewer(Set3) +
xlab("Alumni Salary") +
ylab("Total Annual Cost") +
ggtitle("Cost vs Alumni Salary Contour Plot")
ggplot(collegedata, aes(Alumni.Salary, Total.Annual.Cost)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
scale_fill_brewer("Set1") +
xlab("Alumni Salary") +
ylab("Total Annual Cost") +
ggtitle("Cost vs Alumni Salary Contour Plot")
ggplot(collegedata, aes(Alumni.Salary, Total.Annual.Cost)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
scale_fill_brewer("YlOrRd") +
xlab("Alumni Salary") +
ylab("Total Annual Cost") +
ggtitle("Cost vs Alumni Salary Contour Plot")
ggplot(collegedata, aes(Alumni.Salary, Total.Annual.Cost)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
scale_fill_brewer("YlOrRd") +
xlab("Alumni Salary") +
ylab("Total Annual Cost") +
ggtitle("Cost vs Alumni Salary Contour Plot")
ggplot(collegedata, aes(Alumni.Salary, Total.Annual.Cost)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("Alumni Salary") +
ylab("Total Annual Cost") +
ggtitle("Cost vs Alumni Salary Contour Plot")
library(hexbin)
g2 = ggplot(collegedata, aes(Average.Grant.Aid, Total.Annual.Cost)) +
geom_hex(bins = 30) +
scale_fill_brewer("YlOrRd") +
xlab("Grant Aid") +
ylab("Total Annual School Cost") +
ggtitle("Cost of School and Aid")
ggplotly(g2)
library(hexbin)
g2 = ggplot(collegedata, aes(Average.Grant.Aid, Total.Annual.Cost)) +
geom_hex(bins = 30) +
scale_fill_brewer("YlOrRd") +
xlab("Grant Aid") +
ylab("Total Annual School Cost") +
ggtitle("Cost of School and Aid")
ggplotly(g2)
library(hexbin)
g2 = ggplot(collegedata, aes(Average.Grant.Aid, Total.Annual.Cost)) +
geom_hex(bins = 30) +
xlab("Grant Aid") +
ylab("Total Annual School Cost") +
ggtitle("Cost of School and Aid")
ggplotly(g2)
library(hexbin)
g2 = ggplot(collegedata, aes(Average.Grant.Aid, Total.Annual.Cost)) +
geom_hex(bins = 30) +
xlab("Grant Aid") +
ylab("Total Annual School Cost") +
ggtitle("Cost of School and Aid")
ggplotly(g2)
library(hexbin)
g2 = ggplot(collegedata, aes(Average.Grant.Aid, Total.Annual.Cost)) +
geom_hex(bins = 30) +
xlab("Grant Aid") +
ylab("Total Annual School Cost") +
ggtitle("Cost of School and Aid")
ggplotly(g2)
collegedatanum <- collegedata[, c("Rank", "Total.Annual.Cost", "Undergraduate.Population", "Acceptance.Rate", "Alumni.Salary")]
library(ggcorrplot)
corr <- round(cor(collegedatanum, use = "complete.obs"), 1)
ggcorrplot(corr) +
ggtitle("Correlation Plot")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(echo = FALSE)
collegedata = read.csv("ForbesAmericasTopColleges2019 4.csv", header = TRUE, sep = ",")
library(ggplot2)
library(plotly)
library(ggcorrplot)
library(ggplot2)
library(plotly)
library(ggcorrplot)
collegedata$Size = cut(collegedata$Student.Population,
breaks = c(0, 2500, 8000, 15000, 25000, max(collegedata$Student.Population)),
labels = c("Very Small", "Small", "Medium", "Big", "Very Big"), ordered = TRUE)
collegedata$Rank.Fac = cut(collegedata$Rank,
breaks = c(0, 100, 200, 300, 400, max(collegedata$Rank)),
labels = c("Top 100", "101-200", "201-300", "301-400", "401+"), ordered = TRUE)
na.omit(collegedata)
mean(collegedata$Total.Annual.Cost)
collegedata = read.csv("ForbesAmericasTopColleges2019 4.csv", header = TRUE, sep = ",")
library(ggplot2)
library(plotly)
library(ggcorrplot)
collegedata$Size = cut(collegedata$Student.Population,
breaks = c(0, 2500, 8000, 15000, 25000, max(collegedata$Student.Population)),
labels = c("Very Small", "Small", "Medium", "Big", "Very Big"), ordered = TRUE)
collegedata$Rank.Fac = cut(collegedata$Rank,
breaks = c(0, 100, 200, 300, 400, max(collegedata$Rank)),
labels = c("Top 100", "101-200", "201-300", "301-400", "401+"), ordered = TRUE)
na.omit(collegedata)
collegedata$Size = cut(collegedata$Student.Population,
breaks = c(0, 2500, 8000, 15000, 25000, max(collegedata$Student.Population)),
labels = c("Very Small", "Small", "Medium", "Big", "Very Big"), ordered = TRUE)
collegedata$Rank.Fac = cut(collegedata$Rank,
breaks = c(0, 100, 200, 300, 400, max(collegedata$Rank)),
labels = c("Top 100", "101-200", "201-300", "301-400", "401+"), ordered = TRUE)
mean(collegedata$Total.Annual.Cost)
ggplot(collegedata, aes(Total.Annual.Cost)) +
geom_histogram(fill = "lightpink", binwidth = 5000, color = "black") +
xlab("Total Annual Cost") +
ylab("Count") +
ggtitle("Histogram of Total Annual Cost")
ggplot(collegedata, aes(x = Size, y = Total.Annual.Cost)) +
geom_boxplot(color = "black", fill = "lavender") +
xlab("Size") +
ylab("Total Annual Cost") +
coord_flip() +
ggtitle("Size vs Total Annual Cost")
ggplot(collegedata, aes(x = Size, fill = Public.Private)) +
geom_bar(position = "fill") +
xlab("Size") +
ylab(" ") +
scale_color_brewer(palette = "YlOrRd") +
scale_fill_brewer(palette = "YlOrRd", name = "Public/Private") +
ggtitle("Barchart of Public vs Private and Size")
ggplot(collegedata, aes(x = Rank.Fac, y = Acceptance.Rate, fill = Rank.Fac)) +
geom_violin(scale = "width", alpha = .5) +
geom_boxplot(width = 0.25) +
xlab("College Rank") +
ylab("Acceptance Rate") +
ggtitle("College Rank and Acceptance Rate") +
scale_fill_brewer("Rank")
ggplot(collegedata, aes(Alumni.Salary, Total.Annual.Cost)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("Alumni Salary") +
ylab("Total Annual Cost") +
ggtitle("Cost vs Alumni Salary Contour Plot")
library(ggcorrplot)
corr <- round(cor(collegedatanum, use = "complete.obs"), 1)
ggcorrplot(corr) +
ggtitle("Correlation Plot")
collegedatanum <- collegedata[, c("Rank", "Total.Annual.Cost", "Undergraduate.Population", "Acceptance.Rate", "Alumni.Salary")]
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(echo = FALSE)
library(ggcorrplot)
corr <- round(cor(collegedatanum, use = "complete.obs"), 1)
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
ggplot(collegedata, aes(x = Size, fill = Public.Private)) +
geom_bar(position = "fill") +
xlab("Size") +
ylab(" ") +
scale_color_brewer(palette = "YlOrRd") +
scale_fill_brewer(palette = "YlOrRd", name = "Public/Private") +
ggtitle("Barchart of Public vs Private Schools and Size")
ggplot(collegedata, aes(Alumni.Salary, Total.Annual.Cost)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("Alumni Salary") +
ylab("Total Annual Cost") +
ggtitle("Cost vs Alumni Salary Contour Plot")
library(hexbin)
g2 = ggplot(collegedata, aes(Average.Grant.Aid, Total.Annual.Cost, text = paste("Name", Name))) +
geom_hex(bins = 30) +
xlab("Grant Aid") +
ylab("Total Annual School Cost") +
ggtitle("Cost of School and Aid")
ggplotly(g2)
library(hexbin)
g2 = ggplot(collegedata, aes(Average.Grant.Aid, Total.Annual.Cost, text = paste("Name", Name)) +
geom_hex(bins = 30) +
xlab("Grant Aid") +
ylab("Total Annual School Cost") +
ggtitle("Cost of School and Aid")
ggplotly(g2)
knitr::opts_chunk$set(echo = FALSE)
collegedata = read.csv("ForbesAmericasTopColleges2019 4.csv", header = TRUE, sep = ",")
library(ggplot2)
library(plotly)
library(ggcorrplot)
collegedata$Size = cut(collegedata$Student.Population,
breaks = c(0, 2500, 8000, 15000, 25000, max(collegedata$Student.Population)),
labels = c("Very Small", "Small", "Medium", "Big", "Very Big"), ordered = TRUE)
collegedata$Rank.Fac = cut(collegedata$Rank,
breaks = c(0, 100, 200, 300, 400, max(collegedata$Rank)),
labels = c("Top 100", "101-200", "201-300", "301-400", "401+"), ordered = TRUE)
library(hexbin)
g2 = ggplot(collegedata, aes(Average.Grant.Aid, Total.Annual.Cost, text = paste("Name", Name)) +
geom_hex(bins = 30) +
xlab("Grant Aid") +
ylab("Total Annual School Cost") +
ggtitle("Cost of School and Aid")
ggplotly(g2)
library(hexbin)
g2 = ggplot(collegedata, aes(Average.Grant.Aid, Total.Annual.Cost, text = paste("Name", Name))) +
geom_hex(bins = 30) +
xlab("Grant Aid") +
ylab("Total Annual School Cost") +
ggtitle("Cost of School and Aid")
ggplotly(g2)
library(hexbin)
g2 = ggplot(collegedata, aes(Average.Grant.Aid, Total.Annual.Cost) +
geom_hex(bins = 30) +
xlab("Grant Aid") +
ylab("Total Annual School Cost") +
ggtitle("Cost of School and Aid")
ggplotly(g2)
library(hexbin)
g2 = ggplot(collegedata, aes(Average.Grant.Aid, Total.Annual.Cost)) +
geom_hex(bins = 30) +
xlab("Grant Aid") +
ylab("Total Annual School Cost") +
ggtitle("Cost of School and Aid")
ggplotly(g2)
library(plotly)
g1 = ggplot(collegedata, aes(text = paste("Name", Name), x = Rank, y = Total.Annual.Cost, color = Public.Private)) +
geom_point(alpha = 2/3, size = 2) +
scale_color_brewer(palette = "Paired") +
xlab("School Rank") +
ylab("Total Annual Cost") +
labs(color = "Public or Private") +
ggtitle("Scatterplot of School Rank, Total Annual Cost, and Public/Private")
ggplotly(g1)
library(plotly)
g1 = ggplot(collegedata, aes(x = Rank, y = Total.Annual.Cost, color = Public.Private, text = paste("Name", Name))) +
geom_point(alpha = 2/3, size = 2) +
scale_color_brewer(palette = "Paired") +
xlab("School Rank") +
ylab("Total Annual Cost") +
labs(color = "Public or Private") +
ggtitle("Scatterplot of School Rank, Total Annual Cost, and Public/Private")
ggplotly(g1)
library(plotly)
g1 = ggplot(collegedata, aes(x = Rank, y = Total.Annual.Cost, color = Public.Private, text = paste("Name:", Name))) +
geom_point(alpha = 2/3, size = 2) +
scale_color_brewer(palette = "Paired") +
xlab("School Rank") +
ylab("Total Annual Cost") +
labs(color = "Public or Private") +
ggtitle("Scatterplot of School Rank, Total Annual Cost, and Public/Private")
ggplotly(g1)
collegedatanum <- collegedata[, c("Rank", "Total.Annual.Cost", "Acceptance.Rate", "Alumni.Salary")]
library(ggcorrplot)
corr <- round(cor(collegedatanum, use = "complete.obs"), 1)
ggcorrplot(corr, method = "circle") +
ggtitle("Correlation Plot")
file.create(".nojekyll")
